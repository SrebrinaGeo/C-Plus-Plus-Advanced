#include <iostream>
#include <sstream>
#include <vector>
#include <climits>
using namespace std;

void readMatrix(istream& in, vector< vector<int> >& mat)
{
    int rows, cols;
    in >> rows >> cols;

    mat = vector< vector<int> >(rows, vector<int>(cols, 0));

    for (int curRow = 0; curRow < rows; curRow++)
    {
        for (int curCol = 0; curCol < cols; curCol++) in >> mat[curRow][curCol];
    }
}

int sumSubMatrix(vector< vector<int> >& mat, int startRow, int startCol)
{
    return mat[startRow][startCol] + mat[startRow][startCol + 1] + mat[startRow][startCol + 2] +
        mat[startRow + 1][startCol] + mat[startRow + 1][startCol +1] + mat[startRow + 1][startCol + 2] +
        mat[startRow+2][startCol] + mat[startRow+2][startCol+1] + mat[startRow+2][startCol+2];
}

int main()
{
    vector < vector<int>> mat;

    readMatrix(cin, mat);

    int maxSum = INT_MIN;
    int maxSumRow, maxSumCol;

    for (size_t curRow = 0; curRow < mat.size() - 2; curRow++)
    {
        for (size_t curCol = 0; curCol < mat[0].size() - 2; curCol++)
        {
            int curSum = sumSubMatrix(mat, curRow, curCol);
            if (curSum > maxSum)
            {
                maxSum = curSum;
                maxSumRow = curRow;
                maxSumCol = curCol;
            }
        }
    }
    cout << "Sum = " << maxSum << endl;
    for (size_t curRow = maxSumRow; curRow <= maxSumRow + 2; curRow++)
    {
        for (size_t curCol = maxSumCol; curCol <= maxSumCol + 2; curCol++)
        {
            cout << mat[curRow][curCol] << ' ';
        }
        cout << endl;
    }

    return 0;
}
